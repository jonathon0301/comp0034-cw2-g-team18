# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run pytest with coverage
      run: |
        python gender_app/app.py &  # Start the app.py in the background
        sleep 5  # Wait for a few seconds for the app to start (if needed)
        pip install coverage
        python -c "from webdriver_manager.chrome import ChromeDriverManager; ChromeDriverManager(version='111.0.5563.64').install()"
        coverage run -m pytest  # Run pytest with coverage
        timeout-minutes: 15  # Optionally, set a timeout for the pytest command to prevent it from running indefinitely

    - name: Collect coverage data
      run: |
        coverage report -m  # Generate a coverage report
        coverage xml -o coverage.xml  # Optionally, generate an XML report for further processing

